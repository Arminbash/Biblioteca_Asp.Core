// <auto-generated />
using System;
using Biblioteca.Persisence.MSSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.Persistence.MSSQL.Migrations
{
    [DbContext(typeof(MsSqlBibliotecaDbContext))]
    partial class MsSqlBibliotecaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview7.19362.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdAutor")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdAutor");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Entities.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdEstudiante")
                        .HasColumnType("Int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Carrera")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Edad")
                        .HasColumnType("Int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdEstudiante");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("Entities.LibAut", b =>
                {
                    b.Property<int>("IdLibAut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdLibAut")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorIdAutor");

                    b.Property<int?>("LibroIdLibro");

                    b.HasKey("IdLibAut");

                    b.HasIndex("AutorIdAutor");

                    b.HasIndex("LibroIdLibro");

                    b.ToTable("LibAut");
                });

            modelBuilder.Entity("Entities.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdLibro")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Editorial")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdLibro");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("Entities.Prestamo", b =>
                {
                    b.Property<int>("IdPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdPrestamo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Devolucion")
                        .HasColumnType("bit");

                    b.Property<int?>("EstudianteIdEstudiante");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime");

                    b.Property<int?>("LibroIdLibro");

                    b.HasKey("IdPrestamo");

                    b.HasIndex("EstudianteIdEstudiante");

                    b.HasIndex("LibroIdLibro");

                    b.ToTable("Prestamo");
                });

            modelBuilder.Entity("Entities.LibAut", b =>
                {
                    b.HasOne("Entities.Autor", "Autor")
                        .WithMany("LibAut")
                        .HasForeignKey("AutorIdAutor");

                    b.HasOne("Entities.Libro", "Libro")
                        .WithMany("LibAut")
                        .HasForeignKey("LibroIdLibro");
                });

            modelBuilder.Entity("Entities.Prestamo", b =>
                {
                    b.HasOne("Entities.Estudiante", "Estudiante")
                        .WithMany("Prestamo")
                        .HasForeignKey("EstudianteIdEstudiante");

                    b.HasOne("Entities.Libro", "Libro")
                        .WithMany("Prestamo")
                        .HasForeignKey("LibroIdLibro");
                });
#pragma warning restore 612, 618
        }
    }
}
